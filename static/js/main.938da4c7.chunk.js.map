{"version":3,"sources":["redux/selectors.js","components/Todo/index.js","redux/actions.js","components/TodoList/index.js","components/Filters/index.js","App.js","components/Filters/filterSlice.js","components/TodoList/todoListSlice.js","redux/reducer.js","redux/store.js","index.js"],"names":["todoRemainingSelector","createSelector","state","todoList","filters","status","search","priorities","searchText","filter","todo","length","name","includes","priority","completed","priorityColorMapping","High","Medium","Low","Todo","id","useState","checked","setChecked","dispatch","useDispatch","justify","style","marginBottom","opacity","textDecoration","onChange","type","payload","color","margin","TodoList","todoName","setTodoName","setPriority","useSelector","handleAddTodo","uuidv4","height","maxHeight","span","overflowY","map","Group","display","compact","value","e","target","onKeyDown","key","defaultValue","Option","label","onClick","Search","Input","Filters","setSearchText","filterStatus","setFilterStatus","filterPriorities","setFilterPriorities","Paragraph","fontWeight","marginTop","keyword","placeholder","sm","statusFilterChange","mode","allowClear","width","Title","Typography","App","flexDirection","backgroundColor","padding","boxShadow","borderRadius","textAlign","initState","filterReducer","action","todoListReducer","rootReducer","combineReducers","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.938da4c7.chunk.js","sourcesContent":["import { createSelector } from 'reselect'\r\n\r\nexport const searchTextSelector = (state) => state.filters.search\r\nexport const filterStatusSelector = (state) => state.filters.status\r\nexport const filterPrioritiesSelector = (state) => state.filters.priorities\r\nexport const todoListSelector = (state) => state.todoList\r\n\r\nexport const todoRemainingSelector = createSelector(todoListSelector, filterStatusSelector, searchTextSelector, filterPrioritiesSelector,\r\n    (todoList, status, searchText, priorities) => {\r\n        return todoList.filter((todo) => {\r\n            if (status === 'All') {\r\n                if (priorities.length > 0) {\r\n                    return todo.name.includes(searchText) && priorities.includes(todo.priority)\r\n                }\r\n                return todo.name.includes(searchText)\r\n            } else if (status === 'Completed') {\r\n                if (priorities.length > 0) {\r\n                    return todo.name.includes(searchText) && todo.completed && priorities.includes(todo.priority)\r\n                }\r\n                return todo.name.includes(searchText) && todo.completed\r\n            } else {\r\n                if (priorities.length > 0) {\r\n                    return todo.name.includes(searchText) && !todo.completed && priorities.includes(todo.priority)\r\n                }\r\n                return todo.name.includes(searchText) && !todo.completed\r\n            }\r\n        })\r\n    })","import { Row, Tag, Checkbox } from 'antd';\r\nimport { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { toggleTodoStatus } from '../../redux/actions';\r\n\r\nconst priorityColorMapping = {\r\n  High: 'red',\r\n  Medium: 'blue',\r\n  Low: 'gray',\r\n};\r\n\r\nexport default function Todo({ id, name, priority, completed }) {\r\n  const [checked, setChecked] = useState(completed);\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const toggleCheckbox = () => {\r\n    setChecked(!checked);\r\n    dispatch(toggleTodoStatus(id))\r\n  };\r\n\r\n  return (\r\n    <Row\r\n      justify='space-between'\r\n      style={{\r\n        marginBottom: 3,\r\n        ...(checked ? { opacity: 0.5, textDecoration: 'line-through' } : {}),\r\n      }}\r\n    >\r\n      <Checkbox checked={checked} onChange={toggleCheckbox}>\r\n        {name}\r\n      </Checkbox>\r\n      <Tag color={priorityColorMapping[priority]} style={{ margin: 0 }}>\r\n        {priority}\r\n      </Tag>\r\n    </Row>\r\n  );\r\n}\r\n","// action creators \r\n\r\nexport const addTodo = (data) => {\r\n    return {\r\n        type: 'todoList/addTodo',\r\n        payload: data\r\n    }\r\n}\r\n\r\nexport const toggleTodoStatus = (todoId) => {\r\n    return {\r\n        type: 'todoList/toggleTodoStatus',\r\n        payload: todoId\r\n    }\r\n}\r\n\r\nexport const searchFilterChange = (text) => {\r\n    return {\r\n        type: 'filters/searchFilterChange',\r\n        payload: text\r\n    }\r\n}\r\n\r\nexport const statusFilterChange = (status) => {\r\n    return {\r\n        type: 'filters/statusFilterChange',\r\n        payload: status\r\n    }\r\n}\r\n\r\nexport const priorityFilterChange = (priorities) => {\r\n    return {\r\n        type: 'filters/priorityFilterChange',\r\n        payload: priorities\r\n    }\r\n}","import { Button, Col, Input, Row, Select, Tag } from 'antd';\r\nimport { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux/es/exports';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { addTodo } from '../../redux/actions';\r\nimport { todoRemainingSelector } from '../../redux/selectors';\r\nimport Todo from '../Todo';\r\n\r\nexport default function TodoList() {\r\n\r\n  const [todoName, setTodoName] = useState('')\r\n  const [priority, setPriority] = useState('Medium')\r\n\r\n  const todoList = useSelector(todoRemainingSelector)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const handleInputChange = (e) => {\r\n    setTodoName(e.target.value)\r\n  }\r\n\r\n  const handlePriorityChange = (value) => {\r\n    setPriority(value)\r\n  }\r\n\r\n  const handleAddTodo = () => {\r\n    dispatch(addTodo({\r\n      id: uuidv4(),\r\n      name: todoName,\r\n      priority: priority,\r\n      completed: false,\r\n    }))\r\n\r\n    setTodoName(\"\")\r\n    setPriority(\"Medium\")\r\n  }\r\n\r\n  const handleKeyDown = (e) => {\r\n    if (e.key === \"Enter\") {\r\n      handleAddTodo()\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Row style={{ height: 'calc(100% - 40px)', maxHeight: 230 }}>\r\n      <Col span={24} style={{ height: 'calc(100% - 40px)', overflowY: 'auto' }}>\r\n        {todoList.map(todo => (\r\n          <Todo\r\n            key={todo.id}\r\n            id={todo.id}\r\n            name={todo.name}\r\n            priority={todo.priority}\r\n            completed={todo.completed}\r\n          />\r\n        ))}\r\n      </Col>\r\n\r\n      <Col span={24}>\r\n        <Input.Group style={{ display: 'flex' }} compact>\r\n\r\n          <Input value={todoName} onChange={handleInputChange} onKeyDown={handleKeyDown} />\r\n\r\n          <Select defaultValue=\"Medium\" value={priority} onChange={handlePriorityChange}>\r\n            <Select.Option value='High' label='High'>\r\n              <Tag color='red'>High</Tag>\r\n            </Select.Option>\r\n            <Select.Option value='Medium' label='Medium'>\r\n              <Tag color='blue'>Medium</Tag>\r\n            </Select.Option>\r\n            <Select.Option value='Low' label='Low'>\r\n              <Tag color='gray'>Low</Tag>\r\n            </Select.Option>\r\n          </Select>\r\n\r\n          <Button type='primary' onClick={handleAddTodo}>\r\n            Add\r\n          </Button>\r\n\r\n        </Input.Group>\r\n      </Col>\r\n    </Row>\r\n  );\r\n}\r\n","import { Col, Row, Input, Typography, Radio, Select, Tag } from 'antd';\r\nimport { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { priorityFilterChange, searchFilterChange, statusFilterChange } from '../../redux/actions';\r\n\r\nconst { Search } = Input;\r\n\r\nexport default function Filters() {\r\n\r\n  const [searchText, setSearchText] = useState(\"\")\r\n  const [filterStatus, setFilterStatus] = useState(\"All\")\r\n  const [filterPriorities, setFilterPriorities] = useState([])\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const handleSearchTextChange = (e) => {\r\n    let keyword = e.target.value\r\n    setSearchText(keyword)\r\n    dispatch(searchFilterChange(keyword))\r\n  }\r\n\r\n  const handleStatusChange = (e) => {\r\n    let status = e.target.value\r\n    setFilterStatus(status)\r\n    dispatch(statusFilterChange(status))\r\n  }\r\n\r\n  const handlePrioritiesChange = (value) => {\r\n    setFilterPriorities(value)\r\n    dispatch(priorityFilterChange(value))\r\n  }\r\n\r\n  return (\r\n    <Row justify='center'>\r\n\r\n      <Col span={24}>\r\n        <Typography.Paragraph\r\n          style={{ fontWeight: 'bold', marginBottom: 3, marginTop: 10 }}\r\n        >\r\n          Search\r\n        </Typography.Paragraph>\r\n        <Search value={searchText} onChange={handleSearchTextChange} placeholder='input search text' />\r\n      </Col>\r\n\r\n      <Col sm={24}>\r\n        <Typography.Paragraph\r\n          style={{ fontWeight: 'bold', marginBottom: 3, marginTop: 10 }}\r\n        >\r\n          Filter By Status\r\n        </Typography.Paragraph>\r\n        <Radio.Group value={filterStatus} onChange={handleStatusChange}>\r\n          <Radio value='All'>All</Radio>\r\n          <Radio value='Completed'>Completed</Radio>\r\n          <Radio value='Todo'>To do</Radio>\r\n        </Radio.Group>\r\n      </Col>\r\n\r\n      <Col sm={24}>\r\n        <Typography.Paragraph\r\n          style={{ fontWeight: 'bold', marginBottom: 3, marginTop: 10 }}\r\n        >\r\n          Filter By Priority\r\n        </Typography.Paragraph>\r\n        <Select\r\n          mode='multiple'\r\n          allowClear\r\n          placeholder='Please select'\r\n          style={{ width: '100%' }}\r\n          onChange={handlePrioritiesChange}\r\n          value={filterPriorities}\r\n        >\r\n          <Select.Option value='High' label='High'>\r\n            <Tag color='red'>High</Tag>\r\n          </Select.Option>\r\n          <Select.Option value='Medium' label='Medium'>\r\n            <Tag color='blue'>Medium</Tag>\r\n          </Select.Option>\r\n          <Select.Option value='Low' label='Low'>\r\n            <Tag color='gray'>Low</Tag>\r\n          </Select.Option>\r\n        </Select>\r\n      </Col>\r\n\r\n    </Row>\r\n  );\r\n}\r\n","import { Typography, Divider } from 'antd';\r\nimport './App.css';\r\nimport TodoList from './components/TodoList';\r\nimport Filters from './components/Filters';\r\n\r\nconst { Title } = Typography;\r\n\r\nfunction App() {\r\n  return (\r\n    <div\r\n      style={{\r\n        width: 500,\r\n        margin: '0 auto',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        backgroundColor: 'white',\r\n        padding: 20,\r\n        boxShadow: '0 0 10px 4px #bfbfbf',\r\n        borderRadius: 5,\r\n        height: '90vh',\r\n      }}\r\n    >\r\n      <Title style={{ textAlign: 'center' }}>TODO APP with REDUX</Title>\r\n      <Filters />\r\n      <Divider />\r\n      <TodoList />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const initState = {\r\n    search: '',\r\n    status: 'All',\r\n    priorities: []\r\n}\r\n\r\nconst filterReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'filters/searchFilterChange':\r\n            return {\r\n                ...state,\r\n                search: action.payload\r\n            }\r\n        case 'filters/statusFilterChange':\r\n            return {\r\n                ...state,\r\n                status: action.payload\r\n            }\r\n        case 'filters/priorityFilterChange':\r\n            return {\r\n                ...state,\r\n                priorities: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default filterReducer","const initState =\r\n    [\r\n        {\r\n            id: 1,\r\n            name: \"learn redux\",\r\n            completed: true,\r\n            priority: \"High\"\r\n        },\r\n        {\r\n            id: 2,\r\n            name: \"learn redux saga\",\r\n            completed: false,\r\n            priority: \"Medium\"\r\n        },\r\n    ]\r\n\r\nconst todoListReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'todoList/addTodo':\r\n            return [...state, action.payload]\r\n        case 'todoList/toggleTodoStatus':\r\n            return state.map(todo => todo.id === action.payload ? { ...todo, completed: !todo.completed } : todo)\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default todoListReducer","import { combineReducers } from \"redux\"\r\nimport filterReducer from \"../components/Filters/filterSlice\"\r\nimport todoListReducer from \"../components/TodoList/todoListSlice\"\r\n\r\n// const rootReducer = (state = {}, action) => {\r\n//     return {\r\n//         filters: filterReducer(state.filters, action),\r\n//         todoList: todoListReducer(state.todoList, action)\r\n//     }\r\n// }\r\n\r\nconst rootReducer = combineReducers({\r\n    filters: filterReducer,\r\n    todoList: todoListReducer\r\n})\r\n\r\nexport default rootReducer","import { createStore } from 'redux'\r\nimport rootReducer from './reducer'\r\n\r\nconst store = createStore(rootReducer)\r\n\r\nexport default store","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nimport store from './redux/store'\r\nimport { Provider } from 'react-redux'\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>,\r\n    document.getElementById('root'));"],"sourceRoot":""}